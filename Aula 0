{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN4OpNo7ACVnyn87fkmgykH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"B329Ie0frpaZ","executionInfo":{"status":"ok","timestamp":1740345639509,"user_tz":0,"elapsed":5,"user":{"displayName":"Vasco Lopes","userId":"16480567761176255764"}}},"outputs":[],"source":["# Python Recap Exercises"]},{"cell_type":"code","source":["# --- Exercise 1: Basic Python Syntax ---\n","# Task: Fix the syntax errors in the following code\n","print('Hello, world!')\n","num = 10\n","if num < 5:\n","    print('Number is greater than 5')"],"metadata":{"id":"UqqQAnmyruoZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# --- Exercise 2: Data Types and Variables ---\n","# Task: Swap the values of two variables without using a third variable\n","a = 5\n","b = 10\n","... # Swap operation\n","print(a, b)"],"metadata":{"id":"Ah6C-HCJr5V9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# --- Exercise 3: Lists and Loops ---\n","# Task: Given a list of numbers, print only the even numbers\n","numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n","# code to print even numbers"],"metadata":{"id":"EUCURRJCr9Ik","executionInfo":{"status":"ok","timestamp":1740345778409,"user_tz":0,"elapsed":5,"user":{"displayName":"Vasco Lopes","userId":"16480567761176255764"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# --- Exercise 4: String Manipulation ---\n","# Task: Reverse a string without using built-in functions\n","string = \"Python\"\n","reversed_string = string[::-1]  # Slicing method\n","print(reversed_string)"],"metadata":{"id":"cJtp3EDYsSV3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# --- Exercise 5: Functions ---\n","# Task: Write a function that returns the factorial of a number\n","def factorial(n):\n","  pass\n","\n","print(factorial(5))"],"metadata":{"id":"nv_c4Ow_sUGD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# --- Exercise 6: Dictionary Operations ---\n","# Task: Count the occurrences of each character in a string\n","# Use a dictionary (hashtable) to store the results\n","\n","text = \"hello world\"\n","char_count = {}\n","for char in text:\n","    pass\n","print(char_count)"],"metadata":{"id":"pXb5xgsesiKc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# --- Exercise 7: Classes and Objects ---\n","# Task: Define a class representing a Car with\n","# attributes to store the brand, model and year\n","# and a method to print all attributes in a single string\n","class Car:\n","    def __init__(self, brand, model):\n","        pass\n","\n","    def display_info(self):\n","        pass\n","\n","my_car = Car(\"Toyota\", \"Corolla\", 1999)\n","print(my_car.display_info())"],"metadata":{"id":"pPG6J7nNssGa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# --- Exercise 8: Exception Handling ---\n","# Task: Handle division by zero error\n","# Use \"try ... except\"\n","def safe_divide(a, b):\n","  pass\n","\n","print(safe_divide(10, 2))\n","print(safe_divide(10, 0))"],"metadata":{"id":"r4fpo_iHs7Cx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# --- Exercise 11: Simple Arithmetic ---\n","# Task: Write a function that takes two numbers and returns their sum\n","def add_numbers(x, y):\n","    pass\n","\n","print(add_numbers(3, 7))\n"],"metadata":{"id":"G4NR-5MvtSYM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# --- Exercise 12: List Comprehensions ---\n","# Task: Create a list of squares of numbers from 1 to 10 using list comprehension\n","squares = # code here\n","print(squares)"],"metadata":{"id":"Ga7hTlHQtUPd"},"execution_count":null,"outputs":[]}]}